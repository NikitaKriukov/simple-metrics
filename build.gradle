apply plugin: 'java'

version = '1.0'

repositories {
    mavenCentral()
}

ext {
    vers = [
            jersey : '2.28',
            jetty  : '9.4.12.v20180830',
            jackson: '2.9.8'
    ]
}

dependencies {

    compile "org.eclipse.jetty:jetty-server:${vers.jetty}"
    compile "org.eclipse.jetty:jetty-webapp:${vers.jetty}"

    compile "org.glassfish.jersey.core:jersey-server:${vers.jersey}"
    compile "org.glassfish.jersey.core:jersey-common:${vers.jersey}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${vers.jersey}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${vers.jersey}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${vers.jersey}"
    compile "org.glassfish.jersey.media:jersey-media-moxy:${vers.jersey}"

//    compile "com.fasterxml.jackson.core:jackson-databind:${vers.jackson}"
//
//    runtime "org.glassfish.jersey.media:jersey-media-json-jackson:${vers.jersey}"
//    runtime "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${vers.jackson}"
//    runtime "com.fasterxml.jackson.core:jackson-core:${vers.jackson}"
//    runtime "com.fasterxml.jackson.core:jackson-annotations:${vers.jackson}"

    compile "javax.xml.bind:jaxb-api:2.3.1"
    compile "javax.activation:activation:1.1.1"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
    manifest {
        attributes 'Main-Class': 'nikita.simple.appl.RestServer'
    }
    archiveName 'restMonitoring.jar'
}

task copyWebappToGradle(type: Copy) {
    from file("$projectDir/src/main/webapp")
    into file("$projectDir/docker/appl/webapp")
}

task copyResultJarToGradle(type: Copy) {
    from file("$buildDir/libs/$jar.archiveName")
    from file("$projectDir/docker/start.bat")
    from file("$projectDir/docker/start.sh")
    into file("$projectDir/docker/appl")
}

task copyLibToGradle(type: Copy) {
    from configurations.runtime
    into file("$projectDir/docker/appl/libs")
}

build.dependsOn(copyLibToGradle, copyResultJarToGradle, copyWebappToGradle)

clean.doFirst {
    file("$projectDir/docker/appl").deleteDir()
}